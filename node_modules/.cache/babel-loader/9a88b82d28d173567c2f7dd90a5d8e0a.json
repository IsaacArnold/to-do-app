{"ast":null,"code":"import _slicedToArray from\"/Users/IsaacArnold/Documents/web-projects/react-projects/to-do-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ToDoForm=function ToDoForm(_ref){var addTodo=_ref.addTodo;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var handleValueChange=function handleValueChange(e){setValue(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();if(!value)return;addTodo(value);setValue(\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",placeholder:\"Add a task\",value:value,onChange:handleValueChange}),/*#__PURE__*/_jsx(\"p\",{className:\"character-count\",children:\"Max characters: 20\"})]});};export default ToDoForm;","map":{"version":3,"sources":["/Users/IsaacArnold/Documents/web-projects/react-projects/to-do-app/src/Components/ToDoForm.js"],"names":["React","useState","ToDoForm","addTodo","value","setValue","handleValueChange","e","target","handleSubmit","preventDefault"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAChC,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/BF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR,CACD,CAFD,CAIA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAO,CAC1BA,CAAC,CAACG,cAAF,GACA,GAAI,CAACN,KAAL,CAAY,OACZD,OAAO,CAACC,KAAD,CAAP,CACAC,QAAQ,CAAC,EAAD,CAAR,CACD,CALD,CAOA,mBACE,cAAM,QAAQ,CAAEI,YAAhB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,OAFZ,CAGE,WAAW,CAAC,YAHd,CAIE,KAAK,CAAEL,KAJT,CAKE,QAAQ,CAAEE,iBALZ,EADF,cAQE,UAAG,SAAS,CAAC,iBAAb,gCARF,GADF,CAYD,CA1BD,CA4BA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst ToDoForm = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleValueChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Add a task\"\n        value={value}\n        onChange={handleValueChange}\n      />\n      <p className=\"character-count\">Max characters: 20</p>\n    </form>\n  );\n};\n\nexport default ToDoForm;\n"]},"metadata":{},"sourceType":"module"}