{"version":3,"sources":["Components/Header.js","Components/Quote.js","Components/Todo.js","Components/ToDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Header","message","hour","Date","getHours","className","xmlns","viewBox","preserveAspectRatio","fill","points","Quote","useState","quote","setQuote","useEffect","a","axios","result","data","content","getQuote","Todo","todo","index","completeTodo","removeTodo","icon","circleIcon","isCompleted","onClick","tickSmallOutline","text","crossIcon","ToDoForm","addTodo","value","setValue","onSubmit","e","preventDefault","type","placeholder","maxLength","onChange","target","App","savedItems","JSON","parse","localStorage","getItem","todos","setTodos","setItem","stringify","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c96a438a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  const day = new Date();\n  const hour = day.getHours();\n\n  let message;\n  if (hour >= 1 && hour <= 11) {\n    message = \"Good Morning!\";\n  } else if (hour >= 12 && hour <= 17) {\n    message = \"Good Afternoon!\";\n  } else {\n    message = \"Good Evening!\";\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-bg\"></div>\n      <h1>{message}</h1>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"none\"\n      >\n        <polygon fill=\"#161e29\" points=\"0,100 100,0 100,100\" />\n      </svg>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Quote = () => {\n  const [quote, setQuote] = useState([\"\"]);\n\n  // Quote generation URL: https://github.com/lukePeavey/quotable#get-random-quote\n  // Axios fetch code inspiration is from: https://www.robinwieruch.de/react-hooks-fetch-data\n  useEffect(() => {\n    async function getQuote() {\n      const result = await axios(\"https://api.quotable.io/random?maxLength=50\");\n      setQuote(result.data.content);\n    }\n    getQuote();\n  }, []);\n\n  return (\n    <div className=\"quote\">\n      <p className=\"title\">Quote of the day:</p>\n      <p className=\"quote-txt\">{quote}</p>\n    </div>\n  );\n};\n\nexport default Quote;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport circleIcon from \"@iconify/icons-akar-icons/circle\";\nimport crossIcon from \"@iconify/icons-akar-icons/cross\";\nimport tickSmallOutline from \"@iconify/icons-teenyicons/tick-small-outline\";\n\nconst Todo = ({ todo, index, completeTodo, removeTodo }) => {\n  return (\n    <div className=\"todo\">\n      <Icon\n        icon={circleIcon}\n        className={todo.isCompleted ? \"circles circles-clicked\" : \"circles\"}\n        onClick={() => completeTodo(index)}\n      />\n      <Icon\n        icon={tickSmallOutline}\n        className={todo.isCompleted ? \"tick\" : \"no-tick\"}\n      />\n      <p className={todo.isCompleted ? \"completed\" : \"\"}>{todo.text}</p>\n      <Icon\n        icon={crossIcon}\n        className=\"cross\"\n        onClick={() => removeTodo(index)}\n      />\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nconst ToDoForm = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleValueChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Add a task\"\n        maxLength=\"22\"\n        value={value}\n        onChange={handleValueChange}\n      />\n      <p className=\"character-count\">Max characters: 22</p>\n    </form>\n  );\n};\n\nexport default ToDoForm;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Header from \"./Components/Header\";\nimport Quote from \"./Components/Quote\";\nimport Todo from \"./Components/Todo\";\nimport ToDoForm from \"./Components/ToDoForm\";\n\n// Main to-do code inspiration is from: https://www.digitalocean.com/community/tutorials/how-to-build-a-react-to-do-app-with-react-hooks\n\nfunction App() {\n  const savedItems = JSON.parse(localStorage.getItem(\"todos\"));\n  const [todos, setTodos] = useState(savedItems || []);\n\n  // Local storage code assistance is from: https://dev.to/saranshk/react-hooks-and-local-storage-let-s-build-a-todo-app-39g3\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  });\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Quote />\n      <div className=\"todo-list\">\n        <p className=\"title\">Tasks:</p>\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n      </div>\n      <ToDoForm addTodo={addTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}